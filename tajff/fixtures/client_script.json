[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 1,
  "modified": "2025-01-01 09:59:47.568149",
  "module": null,
  "name": "Journal Entry-Client",
  "script": "frappe.ui.form.on('Journal Entry', {\n    posting_date: function(frm) {\n        frm.doc.naming_series = \"\";\t\n\t    let year = frm.doc.posting_date.slice(2,4);\n\t    //let month = frm.doc.transaction_date.slice(5,7);\n\t    //let day = frm.doc.transaction_date.slice(8,10);\n\t    frm.doc.naming_series = \"ACC-JV-.\" + year + \".-.####\";\n\t    //if (year == '24'){\n\t        //frm.doc.naming_series = 'ACC-JV-.' + year + '.-.####';\n\t    //}\n\t    cur_frm.refresh_fields('naming_series');\n\t},\n});\n\nfrappe.ui.form.on('Journal Entry Account', 'account', function(frm, cdt, cdn) {\n\tvar d = locals[cdt][cdn];\n\tif (d.account == '1101020001 - Petty Cash -Taj Food Factory - Taj') {\n    \td.party_type = 'Employee';\n    \tcur_frm.refresh_fields('party_type');\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Asset",
  "enabled": 1,
  "modified": "2021-10-03 13:50:31.620274",
  "module": null,
  "name": "Asset-Client",
  "script": "frappe.ui.form.on('Asset', {\n    validate: function(frm) {\n\t\tif (frm.doc.asset_category == 'Vehicles'){\n            cur_frm.set_value('naming_series', 'ACC-ASS-VC-.YYYY.-');\n\t\t} else if (frm.doc.asset_category == 'Furnitures'){\n\t\t    cur_frm.set_value('naming_series', 'ACC-ASS-FR-.YYYY.-');\n\t\t} else if (frm.doc.asset_category == 'Machinery and Equipment'){\n\t\t    cur_frm.set_value('naming_series', 'ACC-ASS-MC-.YYYY.-');\n\t\t} else if (frm.doc.asset_category == 'Electrical Equipment'){\n\t\t    cur_frm.set_value('naming_series', 'ACC-ASS-EL-.YYYY.-');\n\t\t} else if (frm.doc.asset_category == 'Buildings'){\n\t\t    cur_frm.set_value('naming_series', 'ACC-ASS-BL-.YYYY.-');\n\t\t} else if (frm.doc.asset_category == 'IT Equipment & Hardware'){\n\t\t    cur_frm.set_value('naming_series', 'ACC-ASS-CM-.YYYY.-');\n\t\t} else if (frm.doc.asset_category == 'IT Software'){\n\t\t    cur_frm.set_value('naming_series', 'ACC-ASS-SW-.YYYY.-');\n\t\t} else {\n\t\t    msgprint('Please Contact IT');\n            validated = false;\n\t\t}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 0,
  "modified": "2024-10-13 08:21:57.845456",
  "module": null,
  "name": "Purchase Invoice-Client",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\trefresh(frm) {\n\t    get_user = frappe.session.user;\n\t    if (get_user != \"m.bajandooh@tajff.com\"){\n    \t\t//cur_frm.toggle_display(\"occupied_by\", doc.item_group==\"Pads\");\n    \t\t//cur_frm.toggle_display(\"is_paid\", false);\n    \t\t//cur_frm.toggle_display(\"is_return\", false);\n    \t\tcur_frm.toggle_display(\"apply_tds\", false);\n    \t\tcur_frm.toggle_display(\"sb_14\", false);\n    \t\tcur_frm.toggle_display(\"is_subcontracted\", false);\n    \t\tcur_frm.toggle_display(\"section_addresses\", false);\n    \t\tcur_frm.toggle_display(\"currency_and_price_list\", false);\n    \t\tcur_frm.toggle_display(\"update_stock\", false);\n    \t\tcur_frm.toggle_display(\"scan_barcode\", false);\n    \t\tcur_frm.toggle_display(\"taxes_section\", false);\n    \t\tcur_frm.toggle_display(\"section_break_44\", false);\n    \t\tcur_frm.toggle_display(\"advances_section\", false);\n    \t\tcur_frm.toggle_display(\"payment_schedule_section\", false);\n    \t\tcur_frm.toggle_display(\"terms_section_break\", false);\n    \t\tcur_frm.toggle_display(\"printing_settings\", false);\n    \t\tcur_frm.toggle_display(\"vat_section\", false);\n    \t\tcur_frm.toggle_display(\"more_info\", false);\n    \t\tcur_frm.toggle_display(\"subscription_section\", false);\n    \t\t\n    \t\t//cur_frm.fields_dict[\"supplier_invoice_details\"].collapse(0);\n\t    }\t\n\t},\n\t\n\t//validate(frm) {\n    //    frm.doc.naming_series = \"\";\t\n    \t    \n    //\tlet year = frm.doc.posting_date.slice(2,4);\n    \t// let month = frm.doc.posting_date.slice(5,7);\n    \t// let day = frm.doc.posting_date.slice(8,10);\n    \t\n    //\tfrm.doc.naming_series += \"ACC-PINV-\" + year + \"-.\";\n\t//},\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Production Plan",
  "enabled": 1,
  "modified": "2023-11-12 12:30:49.539664",
  "module": null,
  "name": "Production Plan-Form",
  "script": "frappe.ui.form.on('Production Plan', {\n\tvalidate: function(frm) {\n        // calculate incentives for each person on the deal\n        //total_incentive = 0\n        $.each(frm.doc.sub_assembly_items,  function(i,  d) {\n            // calculate incentive\n            //var incentive_percent = 2;\n            //if(frm.doc.base_grand_total > 400) incentive_percent = 4;\n            // actual incentive\n            // Rounds a decimal number to two places\n            d.qty = flt(d.qty,2);\n            //total_incentive += flt(d.incentives)\n        });\n        //frm.doc.total_incentive = total_incentive;\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Card",
  "enabled": 0,
  "modified": "2023-11-12 19:58:45.729871",
  "module": null,
  "name": "Job Card-Form",
  "script": "frappe.ui.form.on('Job Card', {\n    before_submit: function(frm) {\n\t    msgprint('a');\n\t    var total_completed_qty = 0;\n\t\t$.each(frm.doc.time_logs,  function(i,  d) {\n\t\t    total_completed_qty += flt(d.completed_qty);\n        });\n        msgprint('b');\n        frm.doc.total_completed_qty = total_completed_qty;\n        frm.doc.for_quantity = total_completed_qty;\n        frm.refresh_field('total_completed_qty');\n        frm.refresh_field('for_quantity');\n\t},\n\t\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 0,
  "modified": "2024-03-21 09:46:56.166316",
  "module": null,
  "name": "Work Order-Form",
  "script": "frappe.ui.form.on('Work Order', {\n\tvalidate: function(frm) {\n\t\tif (frm.doc.planned_start_date > frappe.datetime.nowdate()) {\n            frappe.throw(__('You can not sumbit before Planned Start Date'));\n            validated = false;\n        }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 0,
  "modified": "2023-11-18 23:28:53.108054",
  "module": null,
  "name": "Material Request-Form",
  "script": "frappe.ui.form.on(\"Material Request\", {\r\n\"refresh\": function(frm, cdt, cdn) {\r\nvar d = locals[cdt][cdn];\r\nfrm.add_custom_button(__(\"Create Delivery Note\"), function() {\r\nfrappe.new_doc('Delivery Note', {\r\n\"posting_date\": cur_frm.doc.posting_date,\r\n\"customer\": cur_frm.doc.customer,\r\n\"material_request\": cur_frm.doc.name\r\n});\r\n});\r\n}\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2023-11-18 23:28:44.364849",
  "module": null,
  "name": "Stock Entry-Form",
  "script": "frappe.ui.form.on(\"Delivery Note\", {\r\n    refresh: function(frm, cdt, cdn) {\r\n        if(frm.doc.__islocal && frm.doc.material_request){\r\n            frappe.model.with_doc(\"Material Request\", frm.doc.material_request, function() {\r\n                var mcd = frappe.model.get_doc(\"Material Request\", frm.doc.material_request);\r\n                cur_frm.clear_table(\"items\");\r\n                $.each(mcd.items, function(i, d) {\r\n                    i = frm.add_child(\"items\");\r\n                    i.item_code = d.item_code;\r\n                    i.item_name = d.item_name;\r\n                    i.description = d.description;\r\n                    i.uom = d.uom;\r\n                    i.qty = d.qty;\r\n                    i.warehouse = d.warehouse;\r\n                });\r\n            cur_frm.refresh_field(\"items\");\r\n            });\r\n        }\r\n    }\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2024-10-26 11:21:24.602570",
  "module": null,
  "name": "Item-Form",
  "script": "frappe.ui.form.on('Item', {\n    validate: function(frm) {\n        if(frm.doc.naming_series !== ''){\n            \n        }else if(frm.doc.__islocal){\n\t\t    if (frm.doc.item_group == 'Preparation'){\n                cur_frm.set_value('naming_series', 'PRE.-.#####');\n\t\t    } else if (frm.doc.item_group == 'Filling Machine'){\n\t\t        cur_frm.set_value('naming_series', 'ENG.-.####');\n\t\t    } else if (frm.doc.item_group == 'Cooking'){\n\t\t        cur_frm.set_value('naming_series', 'COK.-.#####');\n\t\t    } else if (frm.doc.item_group == 'Filling'){\n\t\t        cur_frm.set_value('naming_series', 'FIL.-.#####');\n\t\t    } else if (frm.doc.item_group == 'Retort'){\n\t\t        cur_frm.set_value('naming_series', 'ROT.-.#####');\n\t\t    } else if (frm.doc.item_group == 'Spices'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Dry'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Freezer'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');  \n\t\t    } else if (frm.doc.item_group == 'Beef'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Chicken'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Chillier'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');    \n\t\t    } else if (frm.doc.item_group == 'Finished Goods'){\n\t\t        cur_frm.set_value('naming_series', 'FG.####.P');\n\t\t    } else if (frm.doc.item_group == 'Accessory'){\n\t\t        cur_frm.set_value('naming_series', 'ACC.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Packaging'){\n\t\t        cur_frm.set_value('naming_series', 'PCK.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Chemicals'){\n\t\t        cur_frm.set_value('naming_series', 'ENG.-.####');\n\t\t    } else if (frm.doc.item_group == 'Consumables'){\n\t\t        cur_frm.set_value('naming_series', 'ENG.-.####');\n\t\t    } else if (frm.doc.item_group == 'Electrical Parts'){\n\t\t        cur_frm.set_value('naming_series', 'ENG.-.####');\n\t\t    } else if (frm.doc.item_group == 'Tools'){\n\t\t        cur_frm.set_value('naming_series', 'ENG.-.####');\n\t\t    } else if (frm.doc.item_group == 'Mechanical Parts'){\n\t\t        cur_frm.set_value('naming_series', 'ENG.-.####');\n\t\t    } else if (frm.doc.item_group == 'Expenses'){\n\t\t        cur_frm.set_value('naming_series', 'EXP.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Raw Material'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Vegetables'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Leaves'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Dairy'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Powder'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'Sauce'){\n\t\t        cur_frm.set_value('naming_series', 'RAW.-.#######');\n\t\t    } else if (frm.doc.item_group == 'HVAC Parts'){\n\t\t        cur_frm.set_value('naming_series', 'ENG.-.####');\n\t\t    } else if (frm.doc.item_group == \"Fixed Assets\"){\n\t\t        cur_frm.set_value('naming_series', 'ASS.-.#######');\n\t\t    } else {\n\t\t        msgprint('Please Contact IT');\n                validated = false;\n\t\t    }\n        }\n    },\n\t\n\titem_group: function(frm) {\n\t    if (frm.doc.default_material_request_type != 'Manufacture' && frm.doc.item_group == 'Finished Goods') {\n\t        cur_frm.set_value('default_material_request_type', 'Manufacture');\n\t        frappe.msgprint({\n                title: __('Update'),\n                indicator: 'green',\n                message: __('Default Material Request Type')\n            });\n\t    }\n\t},\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2024-03-17 08:15:21.705163",
  "module": null,
  "name": "Payment Entry-Form",
  "script": "frappe.ui.form.on('Payment Entry', {\n    refresh: function(frm) {\n        if (!frm.doc.mode_of_payment && !frm.is_new()) {\n            frm.set_value('mode_of_payment', 'Bank Riyad');\n        }\n    },\n    validate: function(frm) {\n        if (frm.doc.mode_of_payment === '' ){\n            msgprint('أختر طريقة الدفع');\n            validated = false;\n        }\n    },\n    \n    // Triggered when 'Item Code' field is changed\n    party_bank_account: function(frm) {\n        frm.set_value('iban', \"\");\n        // Fetch the value of 'Item Code' field\n        var itemCode = frm.doc.party_bank_account;\n        // Fetch 'Item Name' based on 'Item Code'\n        frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Bank Account',\n                filters: { 'name': itemCode },\n                fieldname: 'iban'\n            },\n            callback: function(r) {\n                // Set 'Item Name' field value if 'Item Code' has a valid entry\n                if (r.message && r.message.iban) {\n                    frm.set_value('iban', r.message.iban);\n                }\n            }\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "BOM",
  "enabled": 0,
  "modified": "2024-09-10 10:00:56.205108",
  "module": null,
  "name": "BOM-Form",
  "script": "frappe.ui.form.on('BOM', {\n\tsetup(frm) {\n\t    \n\t    frm.set_query(\"item\", function () {\n\t\t\treturn {\n\t\t\t\tquery: \"erpnext.manufacturing.doctype.bom.bom.item_query\",\n\t\t\t\tfilters: {\n\t\t\t\t\tis_stock_item: 1,\n\t\t\t\t\titem_group: ['in','Finished Goods, Semi Finished Goods'],\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t\t\n\t\tfrm.set_query(\"item_code\", \"items\", function (doc) {\n\t\t\treturn {\n\t\t\t\tquery: \"erpnext.manufacturing.doctype.bom.bom.item_query\",\n\t\t\t\tfilters: {\n\t\t\t\t\tinclude_item_in_manufacturing: 1,\n\t\t\t\t\tis_fixed_asset: 0,\n\t\t\t\t\titem_group: ['in', 'Raw Material, Packaging, Sauce'],\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2024-04-17 09:22:21.328180",
  "module": null,
  "name": "Delivery Note-Form",
  "script": "frappe.views.calendar[\"Delivery Note\"] = {\r\n\tfield_map: {\r\n\t\t\"start\": \"posting_date\",\r\n\t\t\"end\": \"posting_date\",\r\n\t\t\"id\": \"name\",\r\n\t\t\"title\": \"customer\",\r\n\t\t\"allDay\": \"allDay\",\r\n\t\t\"progress\": \"progress\"\r\n\t}\r\n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 0,
  "modified": "2024-05-08 10:14:29.280617",
  "module": null,
  "name": "Purchase Order-Form",
  "script": "frappe.ui.form.on('Purchase Order', {\n    setup: function(frm) {\n    \tfrm.set_query(\"item_code\", \"items\", function (doc) {\n    \t\t\treturn {\n    \t\t\t\tquery: \"erpnext.buying.doctype.purchase_order.purchase_order.item_code\",\n    \t\t\t\tfilters: {\n    \t\t\t\t\tinclude_item_in_manufacturing: 1,\n    \t\t\t\t\tis_fixed_asset: 0,\n    \t\t\t\t\titem_group: ['in', 'Raw Material, Vegetables'],\n    \t\t\t\t},\n    \t\t\t};\n    \t});\n    },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-10-01 09:00:57.649282",
  "module": null,
  "name": "Sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    refresh: function(frm) {\n        if(frm.doc.is_return == 1){\n\t\t    cur_frm.set_value('naming_series', 'ACC-SINV-RTN-.YY.-');\n        }\n\t},\n\t\n\tvalidate: function(frm) {\n        if(frm.doc.is_return == 1){\n\t\t    cur_frm.set_value('naming_series', 'ACC-SINV-RTN-.YY.-');\n        }\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "BOM",
  "enabled": 1,
  "modified": "2024-10-06 15:14:28.503220",
  "module": null,
  "name": "BOM",
  "script": "frappe.ui.form.on('BOM', {\n\tonload:function (frm) {\n        item_name_ar = frappe.db.get_value('Item', doc.item, 'item_name_arabic');\n        cur_frm.set_value('custom_item_name_arabic', item_name_ar);\n\t},\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2024-12-09 08:16:36.137238",
  "module": null,
  "name": "SI Scrollable Horizontal ListView",
  "script": "//Scrollable Horizontal ListView\nfunction extend_listview_event(doctype, event, callback) {\n    if (!frappe.listview_settings[doctype]) {\n        frappe.listview_settings[doctype] = {};\n    }\n\n    const old_event = frappe.listview_settings[doctype][event];\n    frappe.listview_settings[doctype][event] = function (listview) {\n        if (old_event) {\n            old_event(listview);\n        }\n        callback(listview);\n    };\n}\n\nextend_listview_event(\"Sales Invoice\", \"refresh\", function (listview) {\n    if (window.innerWidth > 768) {\n        document.querySelectorAll('.list-row-col').forEach(function(col) {\n\t\t    col.style.minWidth = '120px';\n\t\t    col.style.maxWidth = '120px';\n\t\t});\n\t\t\n\t\tdocument.querySelectorAll('.list-subject').forEach(function(col) {\n\t\t    col.style.minWidth = '200px';\n\t\t    col.style.maxWidth = '200px';\n\t\t});\n\t\t\n\t\tlet main_container = document.querySelector('.frappe-list');\n\t\tif (main_container) {\n\t\t    main_container.style.overflowX = 'auto';\n\t\t}\n\t\t\n\t\tdocument.querySelectorAll('.list-row-head, .list-row-container').forEach(function(col) {\n\t\t    col.style.width = 'max-content';\n\t\t});\n\t\t\n\t\tdocument.querySelectorAll('.list-row, .level-right').forEach(function(col) {\n\t\t    col.style.flex = '0';\n\t\t});\n    }\n});",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Card",
  "enabled": 1,
  "modified": "2024-12-10 08:02:28.603127",
  "module": null,
  "name": "Choosing Employee",
  "script": "frappe.ui.form.on('Job Card', {\n    onload: function(frm) {\n        frm.set_query(\"employee\", function() {\n            return {\n                \"filters\": {\n                \"status\": \"Active\"\n                }\n            };\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2024-12-10 13:50:34.864328",
  "module": null,
  "name": "Item ListView",
  "script": "frappe.listview_settings['Item'] = {\r\n    onload: function(listview) {\r\n        \r\n        listview.page.add_inner_button('Create Purchase Order', function() {\r\n            let selected_item_names = listview.get_checked_items(true);\r\n\r\n            if (selected_item_names.length === 0) {\r\n                frappe.msgprint(__('Please select at least one item.'));\r\n                return;\r\n            }\r\n\r\n            frappe.new_doc('Purchase Order', {}, function(purchase_order) {\r\n                frappe.model.clear_table(purchase_order, 'items');\r\n\r\n                selected_item_names.forEach(item_name => {\r\n                    let child_row = frappe.model.add_child(purchase_order, 'items');\r\n                    frappe.model.set_value(child_row.doctype, child_row.name, 'item_code', item_name);\r\n                });\r\n            });\r\n        }, 'Taj');\r\n        \r\n    }\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2024-12-17 09:15:29.248313",
  "module": null,
  "name": "Remove sidebar",
  "script": "frappe.ui.form.on('Employee', {\r\n\trefresh: function(frm) {\r\n\t\t$(\".form-assignments\").hide();\r\n\t\t$(\".form-attachments\").hide();\r\n\t\t$(\".form-shared\").hide();\r\n\t\t$(\".form-tags\").hide();\r\n\t\t$(\".form-sidebar-stats\").hide();\r\n\t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\r\n\t}\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Packing Slip",
  "enabled": 1,
  "modified": "2024-12-17 15:04:21.261821",
  "module": null,
  "name": "Filter item batch",
  "script": "frappe.ui.form.on(\"Packing Slip\", {\n    onload: function (frm) {\n        frm.set_query(\"batch_no\", \"items\", function (doc, cdt, cdn) {\n            let row = locals[cdt][cdn];\n            return {\n                \"filters\": {\n                    \"item\": row.item_code\n                },\n            };\n        });\n    },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2024-12-19 13:08:42.404740",
  "module": null,
  "name": "QTY Item added a dynamic",
  "script": "//added a dynamic scenario for Item Listview, i get the total stock qty in the listview with the dynamic row. so you can check it.\r\nfrappe.listview_settings['Item'] = {\r\n    refresh: function(listview) {\r\n        frappe.call({\r\n            method: \"frappe.client.get_list\",\r\n            args: {\r\n                doctype: \"Bin\",\r\n                fields: [\"item_code\", \"actual_qty\", \"warehouse\"],\r\n                limit_page_length: 1000\r\n            },\r\n            callback: function(response) {\r\n                let stock_data = {};\r\n                response.message.forEach(function(bin) {\r\n                    if (!stock_data[bin.item_code]) {\r\n                        stock_data[bin.item_code] = 0;\r\n                    }\r\n                    stock_data[bin.item_code] += bin.actual_qty || 0;\r\n                });\r\n\r\n                if (listview.$result.find('.list-row-head .list-row-col:contains(\"Stock Qty\")').length === 0) {\r\n                    listview.$result.find('.list-row-head .list-row-col:last').each(function() {\r\n                        $('<div class=\"list-row-col ellipsis hidden-xs\"><span>Stock Qty</span></div>').insertAfter($(this));\r\n                    });\r\n                }\r\n\r\n                listview.$result.find('.list-row-container .list-row').each(function() {\r\n                    let $row = $(this);\r\n\r\n                    if ($row.find('.list-row-col:contains(\"Stock Qty\")').length === 0) {\r\n                        let item_id = $row.find('.list-row-col:last').text().trim();\r\n                        let stock_qty = stock_data[item_id] || 0;\r\n\r\n                        let $stock_col = $(`<div class=\"list-row-col ellipsis hidden-xs\"><span>${stock_qty}</span></div>`);\r\n                        $stock_col.insertAfter($row.find('.list-row-col:last'));\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2024-12-31 14:52:23.333399",
  "module": null,
  "name": "Test 1",
  "script": "frappe.ui.form.on('Item', {\n\trefresh: function (frm) {\n        frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Raw Material Specification',\n                name: frm.doc.item_code,\n                fieldname: 'status'\n\t        },\n            callback: function(r){\t\t\t\t\t\t\n                if (r.message.status == 'Rejected') {\n                    frm.set_df_property('is_purchase_item',  'read_only',  1);\n                    frm.set_df_property('include_item_in_manufacturing',  'read_only',  1);\n                    frm.set_df_property('shelf_life_in_days',  'read_only',  1);\n                    msgprint('The item is link with RAW Material Specification.');\n                }\n                //console.log(rms_status);\n\t        }\n        });\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Reconciliation",
  "enabled": 1,
  "modified": "2025-01-05 08:14:07.190565",
  "module": null,
  "name": "Stock Reconciliation",
  "script": "frappe.ui.form.on('Stock Reconciliation', {\n\t\n});\n\n\nfrappe.ui.form.on('Stock Reconciliation Item', {\n    item_code: function(frm, cdt, cdn) {\n        var item = frappe.get_doc(cdt, cdn);\n        var price_list = frm.doc.price_list; // Get the selected price list from the Opportunity DocType\n        var item_code = item.item_code;\n\n        frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Item Price',\n                filters: {\n                    item_code: item_code,\n                    price_list: price_list\n                },\n                fieldname: 'price_list_rate'\n            },\n            callback: function(response) {\n                if (response && response.message) {\n                    frappe.model.set_value(cdt, cdn, 'valuation_rate', response.message.price_list_rate);\n                }\n            }\n        });\n    }\n})",
  "view": "Form"
 }
]